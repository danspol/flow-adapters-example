{"version":3,"file":"flow-adapters.umd.js.map","sources":["ng://flow-adapters/lib/flow-adapters.service.ts","ng://flow-adapters/search-pagination/model.service.ts","ng://flow-adapters/entity/model.service.ts","ng://flow-adapters/lib/flow-adapters.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowAdaptersService {\n\n  constructor() { }\n}\n","import {Store} from '@ngrx/store';\nimport {List} from 'immutable';\nimport {Observable} from \"rxjs\";\nimport {ISearchPaginationSelectors} from \"./selectors\";\nimport {Injectable} from \"@angular/core\";\nimport {ISearchPaginationActions} from \"./actions\";\n\nexport interface ISearchPaginationModel {\n  $ids: Observable<List<string>>;\n  $loading: Observable<boolean>;\n  $query: Observable<any>;\n  $pagination: Observable<any>;\n}\n\n@Injectable()\nexport class SearchPaginationModelService {\n\n  constructor(private store: Store<any>) {\n  }\n\n  getModels<T>(selectors: ISearchPaginationSelectors): ISearchPaginationModel {\n    const $ids = this.store.select(selectors.getIds);\n    const $loading = this.store.select(selectors.getLoading);\n    const $query = this.store.select(selectors.getQuery);\n    const $pagination = this.store.select(selectors.getPagination);\n\n\n    return {\n      $ids,\n      $loading,\n      $query,\n      $pagination\n    };\n  }\n\n  dispatch(actions: ISearchPaginationActions): ISearchPaginationActions {\n\n    const clear = (params) => {\n      this.store.dispatch(actions.clear(params));\n    };\n\n    const search = (params?) => {\n      this.store.dispatch(actions.search(params));\n    };\n\n    const searchError = (params?) => {\n      this.store.dispatch(actions.searchError(params));\n    };\n\n    const searchSuccess = (params?) => {\n      this.store.dispatch(actions.searchSuccess(params));\n    };\n\n    const searchReload = (params?) => {\n      this.store.dispatch(actions.searchReload(params));\n    };\n\n\n    return {\n      clear,\n      search,\n      searchSuccess,\n      searchError,\n      searchReload\n    }\n  }\n}\n","import {Store} from '@ngrx/store';\nimport {List, Map} from 'immutable';\nimport {Observable} from \"rxjs\";\nimport {IEntitySelectors} from \"./selectors\";\nimport {Injectable} from \"@angular/core\";\nimport {IEntityActions} from \"./actions\";\n\nexport interface IEntityModel<T> {\n  $entities: Â Observable<Map<string,Â List<T>>>;\n}\n\n@Injectable()\nexport class EntityModelService {\n\n  constructor(private store: Store<any>) {\n  }\n\n  getModels<T>(selectors: IEntitySelectors<T>): IEntityModel<T> {\n    const $entities = this.store.select(selectors.getEntities);\n\n    return {\n      $entities,\n    };\n  }\n\n  dispatch(actions: IEntityActions): IEntityActions {\n\n    const add = (params) => {\n      this.store.dispatch(actions.add(params));\n    };\n\n    const addSuccess = (params?) => {\n      this.store.dispatch(actions.addSuccess(params));\n    };\n\n    const addError = (params?) => {\n      this.store.dispatch(actions.addError(params));\n    };\n\n    const find = (params?) => {\n      this.store.dispatch(actions.find(params));\n    };\n\n    const findSuccess = (params?) => {\n      this.store.dispatch(actions.findSuccess(params));\n    };\n\n    const findError = (params?) => {\n      this.store.dispatch(actions.findError(params));\n    };\n\n    const remove = (params?) => {\n      this.store.dispatch(actions.remove(params));\n    };\n\n    const removeError = (params?) => {\n      this.store.dispatch(actions.removeError(params));\n    };\n\n    const removeSuccess = (params?) => {\n      this.store.dispatch(actions.removeSuccess(params));\n    };\n\n    const update = (params?) => {\n      this.store.dispatch(actions.update(params));\n    };\n\n    const updateError = (params?) => {\n      this.store.dispatch(actions.updateError(params));\n    };\n\n    const updateSuccess = (params?) => {\n      this.store.dispatch(actions.updateSuccess(params));\n    };\n\n\n\n    return {\n      add,\n      addSuccess,\n      addError,\n      findError,\n      find,\n      findSuccess,\n      remove,\n      removeSuccess,\n      removeError,\n      updateSuccess,\n      updateError,\n      update\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {SearchPaginationModelService} from \"../search-pagination/model.service\";\nimport {EntityModelService} from \"../entity/model.service\";\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [\n    SearchPaginationModelService,\n    EntityModelService\n  ]\n})\nexport class FlowAdaptersModule {\n}\n"],"names":["Injectable","store","Store","NgModule"],"mappings":"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"}
