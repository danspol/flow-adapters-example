!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@ngrx/store")):"function"==typeof define&&define.amd?define("flow-adapters",["exports","@angular/core","@ngrx/store"],t):t(e["flow-adapters"]={},e.ng.core,null)}(this,function(e,r,t){"use strict";var o=function(){function e(){}return e.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=r.defineInjectable({factory:function t(){return new e},token:e,providedIn:"root"}),e}(),n=function(){function e(e){this.store=e}return e.prototype.getModels=function(e){return{$ids:this.store.select(e.getIds),$loading:this.store.select(e.getLoading),$query:this.store.select(e.getQuery),$pagination:this.store.select(e.getPagination)}},e.prototype.dispatch=function(t){var r=this;return{clear:function(e){r.store.dispatch(t.clear(e))},search:function(e){r.store.dispatch(t.search(e))},searchSuccess:function(e){r.store.dispatch(t.searchSuccess(e))},searchError:function(e){r.store.dispatch(t.searchError(e))},searchReload:function(e){r.store.dispatch(t.searchReload(e))}}},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:t.Store}]},e}(),s=function(){function e(e){this.store=e}return e.prototype.getModels=function(e){return{$entities:this.store.select(e.getEntities)}},e.prototype.dispatch=function(t){var r=this;return{add:function(e){r.store.dispatch(t.add(e))},addSuccess:function(e){r.store.dispatch(t.addSuccess(e))},addError:function(e){r.store.dispatch(t.addError(e))},findError:function(e){r.store.dispatch(t.findError(e))},find:function(e){r.store.dispatch(t.find(e))},findSuccess:function(e){r.store.dispatch(t.findSuccess(e))},remove:function(e){r.store.dispatch(t.remove(e))},removeSuccess:function(e){r.store.dispatch(t.removeSuccess(e))},removeError:function(e){r.store.dispatch(t.removeError(e))},updateSuccess:function(e){r.store.dispatch(t.updateSuccess(e))},updateError:function(e){r.store.dispatch(t.updateError(e))},update:function(e){r.store.dispatch(t.update(e))}}},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:t.Store}]},e}(),c=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[],declarations:[],exports:[],providers:[n,s]}]}],e}();e.FlowAdaptersService=o,e.FlowAdaptersModule=c,e.ɵb=s,e.ɵa=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=flow-adapters.umd.min.js.map