{"version":3,"file":"flow-adapters.js.map","sources":["ng://flow-adapters/lib/flow-adapters.service.ts","ng://flow-adapters/search-pagination/model.service.ts","ng://flow-adapters/entity/model.service.ts","ng://flow-adapters/lib/flow-adapters.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowAdaptersService {\n\n  constructor() { }\n}\n","import {Store} from '@ngrx/store';\nimport {List} from 'immutable';\nimport {Observable} from \"rxjs\";\nimport {ISearchPaginationSelectors} from \"./selectors\";\nimport {Injectable} from \"@angular/core\";\nimport {ISearchPaginationActions} from \"./actions\";\n\nexport interface ISearchPaginationModel {\n  $ids: Observable<List<string>>;\n  $loading: Observable<boolean>;\n  $query: Observable<any>;\n  $pagination: Observable<any>;\n}\n\n@Injectable()\nexport class SearchPaginationModelService {\n\n  constructor(private store: Store<any>) {\n  }\n\n  getModels<T>(selectors: ISearchPaginationSelectors): ISearchPaginationModel {\n    const $ids = this.store.select(selectors.getIds);\n    const $loading = this.store.select(selectors.getLoading);\n    const $query = this.store.select(selectors.getQuery);\n    const $pagination = this.store.select(selectors.getPagination);\n\n\n    return {\n      $ids,\n      $loading,\n      $query,\n      $pagination\n    };\n  }\n\n  dispatch(actions: ISearchPaginationActions): ISearchPaginationActions {\n\n    const clear = (params) => {\n      this.store.dispatch(actions.clear(params));\n    };\n\n    const search = (params?) => {\n      this.store.dispatch(actions.search(params));\n    };\n\n    const searchError = (params?) => {\n      this.store.dispatch(actions.searchError(params));\n    };\n\n    const searchSuccess = (params?) => {\n      this.store.dispatch(actions.searchSuccess(params));\n    };\n\n    const searchReload = (params?) => {\n      this.store.dispatch(actions.searchReload(params));\n    };\n\n\n    return {\n      clear,\n      search,\n      searchSuccess,\n      searchError,\n      searchReload\n    }\n  }\n}\n","import {Store} from '@ngrx/store';\nimport {List, Map} from 'immutable';\nimport {Observable} from \"rxjs\";\nimport {IEntitySelectors} from \"./selectors\";\nimport {Injectable} from \"@angular/core\";\nimport {IEntityActions} from \"./actions\";\n\nexport interface IEntityModel<T> {\n  $entities: Â Observable<Map<string,Â List<T>>>;\n}\n\n@Injectable()\nexport class EntityModelService {\n\n  constructor(private store: Store<any>) {\n  }\n\n  getModels<T>(selectors: IEntitySelectors<T>): IEntityModel<T> {\n    const $entities = this.store.select(selectors.getEntities);\n\n    return {\n      $entities,\n    };\n  }\n\n  dispatch(actions: IEntityActions): IEntityActions {\n\n    const add = (params) => {\n      this.store.dispatch(actions.add(params));\n    };\n\n    const addSuccess = (params?) => {\n      this.store.dispatch(actions.addSuccess(params));\n    };\n\n    const addError = (params?) => {\n      this.store.dispatch(actions.addError(params));\n    };\n\n    const find = (params?) => {\n      this.store.dispatch(actions.find(params));\n    };\n\n    const findSuccess = (params?) => {\n      this.store.dispatch(actions.findSuccess(params));\n    };\n\n    const findError = (params?) => {\n      this.store.dispatch(actions.findError(params));\n    };\n\n    const remove = (params?) => {\n      this.store.dispatch(actions.remove(params));\n    };\n\n    const removeError = (params?) => {\n      this.store.dispatch(actions.removeError(params));\n    };\n\n    const removeSuccess = (params?) => {\n      this.store.dispatch(actions.removeSuccess(params));\n    };\n\n    const update = (params?) => {\n      this.store.dispatch(actions.update(params));\n    };\n\n    const updateError = (params?) => {\n      this.store.dispatch(actions.updateError(params));\n    };\n\n    const updateSuccess = (params?) => {\n      this.store.dispatch(actions.updateSuccess(params));\n    };\n\n\n\n    return {\n      add,\n      addSuccess,\n      addError,\n      findError,\n      find,\n      findSuccess,\n      remove,\n      removeSuccess,\n      removeError,\n      updateSuccess,\n      updateError,\n      update\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {SearchPaginationModelService} from \"../search-pagination/model.service\";\nimport {EntityModelService} from \"../entity/model.service\";\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [\n    SearchPaginationModelService,\n    EntityModelService\n  ]\n})\nexport class FlowAdaptersModule {\n}\n"],"names":[],"mappings":"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"}
